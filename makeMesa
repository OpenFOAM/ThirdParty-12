#!/bin/sh
#------------------------------------------------------------------------------
# =========                 |
# \\      /  F ield         | OpenFOAM: The Open Source CFD Toolbox
#  \\    /   O peration     |
#   \\  /    A nd           | Copyright (C) 2020 OpenFOAM Foundation
#    \\/     M anipulation  |
#------------------------------------------------------------------------------
# License
#     This file is part of OpenFOAM.
#
#     OpenFOAM is free software: you can redistribute it and/or modify it
#     under the terms of the GNU General Public License as published by
#     the Free Software Foundation, either version 3 of the License, or
#     (at your option) any later version.
#
#     OpenFOAM is distributed in the hope that it will be useful, but WITHOUT
#     ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or
#     FITNESS FOR A PARTICULAR PURPOSE.  See the GNU General Public License
#     for more details.
#
#     You should have received a copy of the GNU General Public License
#     along with OpenFOAM.  If not, see <http://www.gnu.org/licenses/>.
#
# Script
#     makeMesa
#
# Description
#     Build script for mesa and offscreen mesa (osmesa)
#
#------------------------------------------------------------------------------
mesaPACKAGE=mesa-24.0.2
offscreen=false

#------------------------------------------------------------------------------

# Run from third-party directory only
wmakeCheckPwd "$WM_THIRD_PARTY_DIR" || {
    echo "Error: Current directory is not \$WM_THIRD_PARTY_DIR"
    echo "    The environment variables are inconsistent with the installation."
    echo "    Check the OpenFOAM entries in your dot-files and source them."
    exit 1
}

. etc/tools/ThirdPartyFunctions

#------------------------------------------------------------------------------

usage() {
    exec 1>&2
    while [ "$#" -ge 1 ]; do echo "$1"; shift; done
    cat<<USAGE

usage: ${0##*/} [OPTION] [mesa-VERSION]
options:
  -gcc              force g++ instead of the value from \$WM_CXX
  -offscreen        build offscreen mesa (osmesa)
  -help

* build mesa
      $mesaPACKAGE

USAGE
    exit 1
}

# Ensure we use the correct C++ compiler
[ -n "$WM_CXX" ] && export CXX="$WM_CXX"
[ -n "$WM_CC" ] && export CC="$WM_CC"

# Parse options
while [ "$#" -gt 0 ]
do
    case "$1" in
    -h | -help)
        usage
        ;;
    -gcc)
        export CC=gcc # use gcc
        export CXX=g++ # use g++
        shift
        ;;
    -offscreen)
        offscreen=true
        shift
        ;;
    mesa-[1-9]*)
        mesaPACKAGE="${1%%/}"
        shift
        ;;
    *)
        usage "unknown option/argument: '$*'"
        ;;
    esac
done

#------------------------------------------------------------------------------

# Install graphical mesa to mesa-x.x.x, and offscreen mesa to osmesa-x.x.x
if ! $offscreen
then
    mesaDIR=$mesaPACKAGE
else
    mesaDIR=os$mesaPACKAGE
fi

# Create the directory to which to install
prefixDIR=$installBASE/$mesaDIR

# Create configuration options
options="\
    -Dprefix=$prefixDIR \
    -Dgallium-drivers=swrast \
    -Dllvm=enabled \
    -Dvulkan-drivers=[] \
    -Dgbm=disabled \
    -Degl=disabled"
if ! $offscreen
then
    $WM_PROJECT_DIR/bin/tools/foamVersionCompare ${mesaPACKAGE#mesa-*} lt 22 \
 && options="$options -Dglx=gallium-xlib" \
 || options="$options -Dglx=xlib"
else
    options="$options -Dosmesa=true"
fi

# Build mesa
echo "---------------"
if [ -d "$prefixDIR" ]
then
    echo "Already built: $mesaDIR"
else
    echo "Starting build: $mesaDIR"
    echo
(
    # Get the source
    sourceDIR=$WM_THIRD_PARTY_DIR/$mesaPACKAGE
    sourceURL="ftp://ftp.freedesktop.org/pub/mesa/$mesaPACKAGE.tar.xz"
    [ -d "$sourceDIR" ] \
        || curl "$sourceURL" | tar xJ 2> /dev/null \
        || exit 1

    # Set the build directory
    buildDIR=$buildBASE/$mesaDIR

    # Configure, build and install
    set -x
    cd "$sourceDIR" || exit 1
    meson setup "$buildDIR" $options \
        && ninja -C "$buildDIR" \
        && ninja -C "$buildDIR" install \
        && echo "Built: $mesaPACKAGE"
) || {
    echo "Error building: $mesaPACKAGE"
    exit 1
}
fi

# print usage
if ! $offscreen
then

cat<<USAGE

---------------
Execute ParaView with mesa libraries by running:

    Mesa_DIR=\$WM_THIRD_PARTY_DIR/platforms/\$WM_ARCH\$WM_COMPILER/$mesaDIR

    LD_PRELOAD=\$(echo \$Mesa_DIR/lib*)/libGL.so paraview

USAGE

else

cat<<USAGE

---------------
Build ParaView against the offscreen mesa libraries by running:

    [ -d \$WM_THIRD_PARTY_DIR/platforms/\$WM_ARCH\$WM_COMPILER/$mesaDIR/lib64 ] \
&& osmesaArch=64

    ./makeParaView -osmesa \\
        -osmesa-include \
\$WM_THIRD_PARTY_DIR/platforms/\$WM_ARCH\$WM_COMPILER/$mesaDIR/include/GL \\
        -osmesa-lib \
\$WM_THIRD_PARTY_DIR/platforms/\$WM_ARCH\$WM_COMPILER/$mesaDIR/lib\$osmesaArch/libGL.so

USAGE

fi

#------------------------------------------------------------------------------
